name: 'Better Discord Notification'
author: 'power-room-studio'
description: 'A GitHub action for sending a better Discord notification embed, which can also be customized.'
inputs:
  webhook-url:
    description: 'The Discord webhook URL this notification will be sent to.'
    required: true
  msg-content:
    description: 'Message content for the Webhook Message.'
    required: false
  embed-color:
    description: "The embed's color."
    required: false
    default: '0'
  footer-icon:
    description: 'A small icon to put on the footer. Required in order to show the commit message count.'
    required: false
    default: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png'
  ignore-hidden:
    description: 'Branches that contain the phrase `hidden/` in them will be ignored.'
    required: false
    default: 'true'
runs:
  using: "composite"
  steps:
    - name: Process Commits
      id: process_commits
      run: |
        COMMIT_IDS="${{ join(github.event.commits.*.id, ', ') }}"
        IFS=', ' read -r -a COMMITS_ARRAY <<< "$COMMIT_IDS"
        COMMITS_COUNT="${#COMMITS_ARRAY[@]}"
        COMMIT_MESSAGE="${{ join(github.event.commits.*.message, '\n') }}"

        if [ "$COMMITS_COUNT" == "0" ] || [ "${{ contains(github.ref_name, 'hidden/') }}" == "true" ] && [ "${{ inputs.ignore-hidden }}" == "true" ]; then
          SHOULD_CONTINUE='false'
        else
          SHOULD_CONTINUE='true'
        fi

        echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" | sed -E ':a;N;$!ba;s/\r{0,1}\n/\\n/g' >> $GITHUB_OUTPUT
        echo "COMMITS_COUNT=$COMMITS_COUNT" >> $GITHUB_OUTPUT
        echo "SHOULD_CONTINUE=$SHOULD_CONTINUE" >> $GITHUB_OUTPUT
      shell: bash
    - name: Get Current Time
      uses: josStorer/get-current-time@master
      id: get_time
    - name: Get User Avatar
      uses: fjogeleit/http-request-action@master
      id: get_avatar
      with:
        url: "https://api.github.com/users/${{ github.actor }}"
        method: "GET"
    - name: Prepare Notification
      id: prepare_notification
      run: |
        EVENT_TYPE="${{ github.event_name }}"
        REPO_NAME="${{ github.repository }}"
        TITLE=""
        DESCRIPTION=""
        URL=""

        if [ "$EVENT_TYPE" == "push" ]; then
          TITLE="$REPO_NAME: Push to ${{ github.ref_name }}"
          DESCRIPTION="${{ steps.process_commits.outputs.COMMIT_MESSAGE }}"
          URL="${{ github.event.compare }}"
        elif [ "$EVENT_TYPE" == "pull_request" ]; then
          TITLE="$REPO_NAME: PR #${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}"
          DESCRIPTION="${{ github.event.pull_request.body }}"
          URL="${{ github.event.pull_request.html_url }}"
        elif [ "$EVENT_TYPE" == "issues" ]; then
          TITLE="$REPO_NAME: Issue #${{ github.event.issue.number }}: ${{ github.event.issue.title }}"
          DESCRIPTION="${{ github.event.issue.body }}"
          URL="${{ github.event.issue.html_url }}"
        elif [ "$EVENT_TYPE" == "issue_comment" ]; then
          TITLE="$REPO_NAME: Comment on Issue #${{ github.event.issue.number }}: ${{ github.event.issue.title }}"
          DESCRIPTION="${{ github.event.comment.body }}"
          URL="${{ github.event.comment.html_url }}"
        elif [ "$EVENT_TYPE" == "repository_dispatch" ]; then
          TITLE="$REPO_NAME: Repository Dispatch Event"
          DESCRIPTION="A repository dispatch event has been triggered."
          URL="${{ github.repository.html_url }}"
        elif [ "$EVENT_TYPE" == "release" ]; then
          TITLE="$REPO_NAME: Release: ${{ github.event.release.name }}"
          DESCRIPTION="${{ github.event.release.body }}"
          URL="${{ github.event.release.html_url }}"
        else
          TITLE="$REPO_NAME: Event: $EVENT_TYPE"
          DESCRIPTION="An event of type $EVENT_TYPE occurred."
          URL="${{ github.repository.html_url }}"
        fi

        echo "TITLE=$TITLE" >> $GITHUB_ENV
        echo "DESCRIPTION=$DESCRIPTION" >> $GITHUB_ENV
        echo "URL=$URL" >> $GITHUB_ENV
      shell: bash
    - name: Send Notification
      uses: fjogeleit/http-request-action@master
      with:
        url: ${{ inputs.webhook-url }}
        method: 'POST'
        data: |
          {
            "content": "${{ inputs.msg-content }}",
            "embeds": [
              {
                "title": "${{ env.TITLE }}",
                "description": "${{ env.DESCRIPTION }}",
                "url": "${{ env.URL }}",
                "color": ${{ inputs.embed-color }},
                "footer": {
                  "text": "${{ steps.process_commits.outputs.COMMITS_COUNT }} new commit(s)",
                  "icon_url": "${{ fromJson(steps.get_avatar.outputs.response).avatar_url }}"
                },
                "timestamp": "${{ steps.get_time.outputs.time }}"
              }
            ],
            "username": "Colette - from Github!",
            "avatar_url": "https://media.discordapp.net/attachments/1251912036674310205/1251918009220468797/image.png"
          }
branding:
  icon: 'bell'
  color: 'blue'
